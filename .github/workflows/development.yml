name: Build and deploy Storefront

on:
  push:
    branches: [ SSPSC-47_ops-and-automation ]
  pull_request:
    branches: [ main, develop ]

jobs:
  lint:
    name: Run Linting
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - name: Install dependencies
        run: |
          git config --global user.name "$(git log HEAD --pretty='%aN')"
          git config --global user.email "$(git log HEAD --pretty='%aE')"
      - uses: actions/setup-node@v3
        with:
          node-version-file: '.nvmrc'
          cache: 'npm'
          cache-dependency-path: |
            build/package-lock.json
      - run: |
          npm run install

      - name: Lint the code
        run: |
          npm run lint

  unit-tests:
    needs: lint
    name: Run Unit Tests
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - name: Install dependencies
        run: |
          git config --global user.name "$(git log HEAD --pretty='%aN')"
          git config --global user.email "$(git log HEAD --pretty='%aE')"
      - uses: actions/setup-node@v3
        with:
          node-version: '18.17.0'
          cache: 'npm'
          cache-dependency-path: |
            test/package-lock.json
      - run: |
          cd test
          npm ci

      - name: Run Unit Tests
        run: |
          cd test
          npm run test:unit

  build:
    needs: unit-tests
    name: Build Storefront
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - name: Initialize git config & install dependencies
        run: |
          git config --global user.name "$(git log HEAD --pretty='%aN')"
          git config --global user.email "$(git log HEAD --pretty='%aE')"

      - name: Cache node modules
        id: cache-nodemodules
        uses: actions/cache@v2
        env:
          cache-name: cache-node-modules
        with:
          path: node_modules
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-

      - uses: actions/setup-node@v3
        with:
          node-version-file: '.nvmrc'
          if: steps.cache-nodemodules.outputs.cache-hit != 'true'
          # cache-dependency-path: |
          #   package-lock.json
          #   build/package-lock.json
          #   storefront-reference-architecture/package-lock.json
      - run: |
          npm ci
          npm run sfra:install

      - name: Compile static files
        run: |
          npm run dev

      - name: Cache sfcc-ci
        id: cache-sfcc-ci
        uses: actions/cache@v4
        with:
          path: /usr/local/bin
          key: sfcc-ci

      - name: Download and install sfcc-ci binary
        if: steps.cache-sfcc-ci.outputs.cache-hit != 'true'
        run: |
          sudo curl -sL https://github.com/SalesforceCommerceCloud/sfcc-ci/releases/download/v2.11.0/sfcc-ci-linux -o /usr/local/bin/sfcc-ci
          sudo chmod +x /usr/local/bin/sfcc-ci

      - name: Deploy to Development
        env:
          SFCC_OAUTH_CLIENT_ID: ${{ secrets.SFCC_OAUTH_CLIENT_ID }}
          SFCC_OAUTH_CLIENT_SECRET: ${{ secrets.SFCC_OAUTH_CLIENT_SECRET }}
          HOST: ${{ secrets.DEV_HOST }}
        run: |
          SHA=${{ github.sha }}
          SHORT_SHA=$(echo $SHA | cut -c 1-8)
          BUILD_NAME=development-${SHORT_SHA}-build-${{ github.run_number }}
          npm run code:zip -- -r ${BUILD_NAME}
          sfcc-ci client:auth
          sfcc-ci code:deploy dist/${BUILD_NAME}.zip -i ${HOST} --activate

  e2e-tests:
    needs: build
    if: always()
    name: Run Integration & UI Tests
    runs-on: ubuntu-latest
    timeout-minutes: 15
    continue-on-error: true

    steps:
      - uses: actions/checkout@v3
      - name: Install dependencies
        run: |
          git config --global user.name "$(git log HEAD --pretty='%aN')"
          git config --global user.email "$(git log HEAD --pretty='%aE')"
      - uses: actions/setup-node@v3
        with:
          node-version: '18.17.0'
          cache: 'npm'
          cache-dependency-path: |
            test/package-lock.json
      - run: |
          cd test
          npm ci
          npx playwright install

      - name: Run Integration & UI Tests
        env:
          BASE_URL: ${{ secrets.DEV_STOREFRONT_URL }}
          SITE_URL: ${{ secrets.SITE_URL }}
        run: |
          cd test
          npm run test:e2e
      - uses: actions/upload-artifact@v2
        if: always()
        with:
          name: playwright-report
          path: test/playwright-report/
          retention-days: 30

  publish_report:
    name: Publish Playwright Report
    if: "success() || needs.test.result == 'failure'"
    needs: e2e-tests
    runs-on: ubuntu-latest
    continue-on-error: true
    env:
      HTML_REPORT_URL_PATH: reports/${{ github.ref_name }}/${{ github.run_id }}/${{ github.run_attempt }}

    steps:
      - name: Checkout GitHub Pages Branch
        uses: actions/checkout@v2
        with:
          ref: gh-pages
      - name: Set Git User
        run: |
          git config --global user.name "$(git log HEAD --pretty='%aN')"
          git config --global user.email "$(git log HEAD --pretty='%aE')"
      - name: Download report
        uses: actions/download-artifact@v2
        with:
          name: playwright-report
          path: ${{ env.HTML_REPORT_URL_PATH }}
      - name: Push Report
        timeout-minutes: 3
        run: |
          git add .
          git commit -m "automation: add HTML report for run-id ${{ github.run_id }} (attempt:  ${{ github.run_attempt }})"

          while true; do
            git pull --rebase
            if [ $? -ne 0 ]; then
              echo "Failed to rebase. Please review manually."
              exit 1
            fi

            git push
            if [ $? -eq 0 ]; then
              echo "Successfully pushed HTML report to repo."
              exit 0
            fi
          done
      - name: Output Report URL to build pipeline
        run: |
          FULL_HTML_REPORT_URL=https://maze-consulting.github.io/shop-pay-sfcc-connector/$HTML_REPORT_URL_PATH

          echo "::notice title=ðŸ“‹ Published Playwright Test Report::$FULL_HTML_REPORT_URL"
