# This workflow will do a clean install of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: CI - Run tests

on:
  push:
    branches:
      - main
      - develop
  pull_request:
    branches: [main]

jobs:
  test:
    runs-on: ubuntu-latest
    concurrency:
      group: ${{ github.ref }}
      cancel-in-progress: true

    steps:
      - uses: actions/checkout@v2
      - name: Use Node.js 18.x
        uses: actions/setup-node@v2
        with:
          node-version: 18.x
          cache: "npm"
      - run: npm ci
      - run: npm run build --if-present
      - run: npm test

  release-new-versions:
    name: Create a new release.
    runs-on: ubuntu-latest
    needs: test
    if: ${{ github.ref == 'refs/heads/main' }}

    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 2

      - name: Get version
        id: get-version
        run: |
          npm --no-git-tag-version version ${{ github.event.inputs.release_type }}
          echo "::set-output name=version::$(grep '"version":' package.json | cut -d\" -f4)"

      - name: Create Release
        uses: thomaseizinger/create-release@1.0.0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          target_commitish: ${{ github.event.pull_request.merge_commit_sha }}
          tag_name: v${{ steps.get-version.outputs.version }}
          name: v${{ steps.get-version.outputs.version }}
          draft: false
          prerelease: false

      - name: Merge main into develop branch
        uses: thomaseizinger/create-pull-request@1.0.0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          head: main
          base: develop
          title: Merge main into develop branch
          body: |
            This PR merges the main branch back into develop.
            This happens to ensure that the updates that happend on the release branch, i.e. CHANGELOG and manifest updates are also present on the dev branch.
